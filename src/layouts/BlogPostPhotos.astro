---
export interface Props {
  photoPaths: string[];
}

const { photoPaths } = Astro.props;
---

<div class="overflow-hidden relative rounded-lg border-4">
  <div id="img-container" class="flex duration-500">
    {
      photoPaths.map((photoPath) => (
        <>
          <img src={photoPath} />
        </>
      ))
    }
  </div>
  <div class="absolute inset-0 grid grid-rows-3 p-2">
    <div></div>
    <div class="flex items-center justify-between">
      <button aria-label="Previous" id="prev-button" class="bg-white grid items-center justify-center w-8 h-8 rounded-full opacity-60"><span class="i-carbon-chevron-left"></span></button>
      <button aria-label="Next" id="next-button" class="bg-white grid items-center justify-center w-8 h-8 rounded-full opacity-60"><span class="i-carbon-chevron-right"></span></button>
    </div>
    <div id="indicator-container" class="flex items-end justify-center space-x-1.2">
      {photoPaths.map((_, index: number) => {
        if (index === 0) {
          return <div class="indicator bg-white opacity-100 w-1.5 h-1.5 rounded-full ease-in-out duration-200"></div>;
        }
        return <div class="indicator bg-white opacity-40 w-1.5 h-1.5 rounded-full ease-in-out duration-200"></div>;
      })}
    </div>
  </div>
</div>

<script>
  /**
   * Update the display of images and indicators based on the current active image index.
   * @param {number} activeIndex - The index of the active image.
   * @param {HTMLElement} imgContainer - The image container element.
   */
  function updateDisplay(activeIndex, imgContainer) {
    curr = activeIndex;
    imgContainer.style.transform = `translateX(-${(curr - 1) * 100}%)`;
    indicators.forEach((indicator, index) => {
      indicator.style.opacity =
        index === curr - 1 ? "1" : "0.4";
    });
  }

  // Query for needed elements
  const nextButton = document.querySelector<HTMLElement>("#next-button");
  const prevButton = document.querySelector<HTMLElement>("#prev-button");
  const imgContainer = document.querySelector<HTMLElement>("#img-container");
  const indicators = document.querySelectorAll<HTMLElement>(".indicator");

  let curr = 1;
  const photosAmount =
    document.querySelectorAll("#img-container img").length;

  // Make sure we have all the needed elements
  if (imgContainer && prevButton && nextButton && indicators) {
    nextButton.addEventListener("click", function () {
      // Check if we are on the last photo, go back to the first
      // Otherwise increase curr
      if (curr === photosAmount) {
        updateDisplay(1, imgContainer);
      } else {
        updateDisplay(curr + 1, imgContainer);
      }
    });

    prevButton.addEventListener("click", function () {
      // If at the first element, go back to the last
      // Otherwise decrease curr
      if (curr === 1) {
        updateDisplay(photosAmount, imgContainer);
      } else {
        updateDisplay(curr - 1, imgContainer);
      }
    });
  }
</script>